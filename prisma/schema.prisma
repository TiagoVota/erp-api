// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Health {
  id   Int    @id @default(autoincrement())
  name String @unique

  @@map("health")
}

model Enterprise {
  id            Int      @id @default(autoincrement())
  cnpj          String   @unique @db.VarChar(14)
  corporateName String   @db.VarChar(80)
  tradingName   String   @db.VarChar(80)
  adminId       Int      @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  admin User @relation(fields: [adminId], references: [id])

  @@map("enterprises")
}

model User {
  id        Int      @id @default(autoincrement())
  cpf       String   @unique @db.VarChar(11)
  name      String   @db.VarChar(80)
  email     String   @unique @db.VarChar(80)
  password  String   @db.VarChar(80)
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  enterprises Enterprise[]
  permissions Permission[]
  payers      Transaction[] @relation(name: "payer")
  payees      Transaction[] @relation(name: "payee")

  @@map("users")
}

model Permission {
  id                 Int      @id @default(autoincrement())
  userId             Int      @unique
  seeUsers           Boolean  @default(false)
  addUsers           Boolean  @default(false)
  deleteUsers        Boolean  @default(false)
  editPermissions    Boolean  @default(false)
  seeTransactions    Boolean  @default(false)
  addTransactions    Boolean  @default(false)
  editTransactions   Boolean  @default(false)
  deleteTransactions Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("permissions")
}

model Transaction {
  id           Int       @id @default(autoincrement())
  value        Int
  payerId      Int
  payeeId      Int
  description  String?   @db.VarChar(255)
  writeOffDate DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  payer User @relation(name: "payer", fields: [payerId], references: [id], onDelete: Cascade)
  payee User @relation(name: "payee", fields: [payeeId], references: [id], onDelete: Cascade)

  @@map("transactions")
}
